/*A programme, where user inputs square matrix A (row and column number is n, where 1<n<10) 
programme transposes the matrix and outputs the transposed matrix B.*/

#include <stdio.h>
#include <stdlib.h>

// Function prototypes
void PrintIntroduction(char []);
int InputForDimensions(char []);
void InputForEntries(int n, int matrix[n][n]);
void TransposeMatrix(int n, int matrix[n][n], int transposed[n][n]);
void OutputResult(int n, int transposed[n][n]);

// Main function
int main(void) {
    // Input
    PrintIntroduction("The program will transpose an inserted square matrix.\n");
    int n = InputForDimensions("Enter the size of the matrix (1 < n < 10): ");
    int matrix[n][n];
    int transposed[n][n];
    InputForEntries(n, matrix);

    // Process
    TransposeMatrix(n, matrix, transposed);

    // Output 
    OutputResult(n, transposed);

    return 0;
}

// Function to print introduction message
void PrintIntroduction(char message[]) {
    printf("%s", message);
}

// Function to input dimensions of the matrix
int InputForDimensions(char prompt[]) {
    int n;
    do {
        printf("%s", prompt);
        scanf("%d", &n);
    } while (n <= 1 || n >= 10);
    return n;
}

// Function to input entries of the matrix
void InputForEntries(int n, int matrix[n][n]) {
    printf("Enter the entries of the matrix:\n");
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            printf("Element [%d][%d]: ", i, j);
            scanf("%d", &matrix[i][j]);
        }
    }
}

// Function to transpose the matrix
void TransposeMatrix(int n, int matrix[n][n], int transposed[n][n]) {
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            transposed[j][i] = matrix[i][j];
        }
    }
}

// Function to output the transposed matrix
void OutputResult(int n, int transposed[n][n]) {
    printf("The transposed matrix is:\n");
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            printf("%d ", transposed[i][j]);
        }
        printf("\n");
    }
}
